name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease
      tag:
        description: 'NPM tag to publish with (default: latest for stable, beta for pre-releases)'
        required: false
        default: ''
        type: string

permissions:
  contents: write
  id-token: write
  
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'
          cache: 'npm'
          
      - name: Configure Git
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Run lint
        run: npm run lint
        
      - name: Build
        run: npm run build
          
      - name: Update version
        id: version
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          VERSION=$(node -e "console.log(require('./package.json').version)")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Updated to version $VERSION"
          
      - name: Update README badge
        run: |
          VERSION=${{ steps.version.outputs.version }}
          if grep -q "img.shields.io/npm/v/robust-axios-client" README.md; then
            sed -i -E 's|img.shields.io/npm/v/robust-axios-client(/v[0-9]+\.[0-9]+\.[0-9]+(-[a-z0-9.]+)?)?|img.shields.io/npm/v/robust-axios-client/v'"${VERSION}"'|g' README.md
          fi
          
      - name: Commit changes
        run: |
          git add package.json package-lock.json README.md
          git commit -m "chore: release v${{ steps.version.outputs.version }}"
          
      - name: Create Tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "v${{ steps.version.outputs.version }}"
          message: "Release v${{ steps.version.outputs.version }}"
          
      - name: Generate release notes
        id: changelog
        run: |
          if [ -f .github/changelog-configuration.json ]; then
            echo "Using changelog configuration"
          else
            echo '{"categories": [{"title": "## 🚀 Features","labels": ["feature","enhancement"]},{"title": "## 🐛 Fixes","labels": ["fix","bug"]},{"title": "## 🧪 Tests","labels": ["test"]},{"title": "## 📚 Documentation","labels": ["documentation"]},{"title": "## 🧰 Maintenance","labels": ["chore","dependencies"]}],"ignore_labels": ["ignore"],"sort": "ASC","template": "${{'{{'}}CHANGELOG{{'}}'}}","pr_template": "- ${{'{{'}}TITLE{{'}}'}} (#${{'{{'}}NUMBER{{'}}'}}","empty_template": "No changes"}' > .github/changelog-configuration.json
          fi
          
      - uses: mikepenz/release-changelog-builder-action@v4
        id: build_changelog
        with:
          configurationFile: .github/changelog-configuration.json
          outputFile: .github/CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Determine NPM tag
        id: npm_tag
        run: |
          # Determine NPM tag based on version or input
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            NPM_TAG="${{ github.event.inputs.tag }}"
          elif [[ "${{ steps.version.outputs.version }}" == *"-"* ]]; then
            NPM_TAG="beta"
          else
            NPM_TAG="latest"
          fi
          echo "tag=$NPM_TAG" >> $GITHUB_OUTPUT
          echo "Using NPM tag: $NPM_TAG"
          
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ steps.version.outputs.version }}"
          name: "Release v${{ steps.version.outputs.version }}"
          bodyFile: ".github/CHANGELOG.md"
          draft: false
          prerelease: ${{ contains(github.event.inputs.version, 'pre') }}
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Push changes
        run: git push --follow-tags
          
      - name: Publish to NPM
        run: |
          # Verify token before publishing
          if [ -z "$NODE_AUTH_TOKEN" ]; then
            echo "::error::NPM_TOKEN secret is missing. Please add it to your repository secrets."
            exit 1
          fi
          
          echo "Publishing to NPM with tag: ${{ steps.npm_tag.outputs.tag }}"
          npm publish --provenance --access public --tag ${{ steps.npm_tag.outputs.tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}